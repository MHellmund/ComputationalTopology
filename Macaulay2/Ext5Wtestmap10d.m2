--ulimit -v unlimited;ulimit -d unlimited; GC_NPROCS=4 GC_MARKERS=4 M2 Koszul10d.m2
t1 = cpuTime()
needsPackage "DGAlgebras"
needsPackage "BoijSoederberg"
-- needsPackage "ChainComplexExtras"
D=10;
spindim=16;
Nsusy=1;
Nspin=spindim*Nsusy;
msusy=id_(ZZ^Nsusy);
kk= ZZ/32003;
R=kk[t_1..t_Nspin];
ofilename="result_"|D|"dN"|Nsusy|"sheaf.txt"
ofile=ofilename<<""<<endl
--ofile<<run "hostname"<<run "date"<<endl


-- gamma=WeylC1[10].WeylGamma[10, i];gamma[[1 ;; 16, 1 ;; 16]]--
----NEED to check all relations: Tleft*gamma*Tright!=0, and #(trim ideal(Ilist))=D----  
gamma={matrix{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0}, {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}**msusy,
--
matrix{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}**msusy,
--
matrix{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}**msusy,
--
matrix{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}**msusy,
--
matrix{{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}}**msusy,
--
matrix{{0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}}**msusy,
--
matrix{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}**msusy,
--
matrix{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}**msusy,
--
matrix{{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0}}**msusy,
--
matrix{{0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0}}**msusy};

--Tleft = vars R;Tright=transpose Tleft;
Tright= matrix{{t_1}..{t_Nspin}};Tleft=transpose Tright;
--Tleft = matrix{{t_1..t_Nspin}};	--Wrong! Cannot keep homogeneity in matrix multiplication!
Ilist=apply(toList(0..(D-1)),i->(Tleft*(gamma#i)*Tright)_(0,0))
I=ideal(Ilist)
Q=R/I

ext5W=transpose matrix{{-2*t_6,-2*t_5,2*t_8,2*t_7,2*t_2,2*t_1,-2*t_4,-2*t_3,2*t_14,2*t_13,-2*t_16,-2*t_15,-2*t_10,-2*t_9,2*t_12,2*t_11},{2*t_5,2*t_6,-2*t_7,-2*t_8,-2*t_1,-2*t_2,2*t_3,2*t_4,-2*t_13,-2*t_14,2*t_15,2*t_16,2*t_9,2*t_10,-2*t_11,-2*t_12},{2*t_5,-2*t_6,2*t_7,-2*t_8,-2*t_1,2*t_2,-2*t_3,2*t_4,-2*t_13,2*t_14,-2*t_15,2*t_16,2*t_9,-2*t_10,2*t_11,-2*t_12},{-2*t_7,2*t_8,-2*t_5,2*t_6,2*t_3,-2*t_4,2*t_1,-2*t_2,2*t_15,-2*t_16,2*t_13,-2*t_14,-2*t_11,2*t_12,-2*t_9,2*t_10},{-2*t_7,2*t_8,2*t_5,-2*t_6,-2*t_3,2*t_4,2*t_1,-2*t_2,2*t_15,-2*t_16,-2*t_13,2*t_14,2*t_11,-2*t_12,-2*t_9,2*t_10},{2*t_3,-2*t_4,-2*t_1,2*t_2,2*t_7,-2*t_8,-2*t_5,2*t_6,-2*t_11,2*t_12,2*t_9,-2*t_10,-2*t_15,2*t_16,2*t_13,-2*t_14},{2*t_3,-2*t_4,-2*t_1,2*t_2,-2*t_7,2*t_8,2*t_5,-2*t_6,2*t_11,-2*t_12,-2*t_9,2*t_10,-2*t_15,2*t_16,2*t_13,-2*t_14},{-2*t_11,2*t_12,2*t_9,-2*t_10,2*t_15,-2*t_16,-2*t_13,2*t_14,-2*t_3,2*t_4,2*t_1,-2*t_2,2*t_7,-2*t_8,-2*t_5,2*t_6},{2*t_11,-2*t_12,-2*t_9,2*t_10,-2*t_15,2*t_16,2*t_13,-2*t_14,-2*t_3,2*t_4,2*t_1,-2*t_2,2*t_7,-2*t_8,-2*t_5,2*t_6},{2*t_5,-2*t_6,-2*t_7,2*t_8,-2*t_1,2*t_2,2*t_3,-2*t_4,-2*t_13,2*t_14,2*t_15,-2*t_16,2*t_9,-2*t_10,-2*t_11,2*t_12},{-2*t_5,-2*t_6,-2*t_7,-2*t_8,2*t_1,2*t_2,2*t_3,2*t_4,2*t_13,2*t_14,2*t_15,2*t_16,-2*t_9,-2*t_10,-2*t_11,-2*t_12},{-2*t_7,-2*t_8,-2*t_5,-2*t_6,2*t_3,2*t_4,2*t_1,2*t_2,2*t_15,2*t_16,2*t_13,2*t_14,-2*t_11,-2*t_12,-2*t_9,-2*t_10},{2*t_7,2*t_8,-2*t_5,-2*t_6,2*t_3,2*t_4,-2*t_1,-2*t_2,-2*t_15,-2*t_16,2*t_13,2*t_14,-2*t_11,-2*t_12,2*t_9,2*t_10},{2*t_3,2*t_4,-2*t_1,-2*t_2,2*t_7,2*t_8,-2*t_5,-2*t_6,-2*t_11,-2*t_12,2*t_9,2*t_10,-2*t_15,-2*t_16,2*t_13,2*t_14},{-2*t_3,-2*t_4,2*t_1,2*t_2,2*t_7,2*t_8,-2*t_5,-2*t_6,-2*t_11,-2*t_12,2*t_9,2*t_10,2*t_15,2*t_16,-2*t_13,-2*t_14},{-2*t_11,-2*t_12,2*t_9,2*t_10,2*t_15,2*t_16,-2*t_13,-2*t_14,-2*t_3,-2*t_4,2*t_1,2*t_2,2*t_7,2*t_8,-2*t_5,-2*t_6},{-2*t_11,-2*t_12,2*t_9,2*t_10,2*t_15,2*t_16,-2*t_13,-2*t_14,2*t_3,2*t_4,-2*t_1,-2*t_2,-2*t_7,-2*t_8,2*t_5,2*t_6},{-2*t_6,-2*t_5,-2*t_8,-2*t_7,2*t_2,2*t_1,2*t_4,2*t_3,2*t_14,2*t_13,2*t_16,2*t_15,-2*t_10,-2*t_9,-2*t_12,-2*t_11},{2*t_8,2*t_7,2*t_6,2*t_5,-2*t_4,-2*t_3,-2*t_2,-2*t_1,-2*t_16,-2*t_15,-2*t_14,-2*t_13,2*t_12,2*t_11,2*t_10,2*t_9},{2*t_8,2*t_7,-2*t_6,-2*t_5,2*t_4,2*t_3,-2*t_2,-2*t_1,-2*t_16,-2*t_15,2*t_14,2*t_13,-2*t_12,-2*t_11,2*t_10,2*t_9},{-2*t_4,-2*t_3,2*t_2,2*t_1,-2*t_8,-2*t_7,2*t_6,2*t_5,2*t_12,2*t_11,-2*t_10,-2*t_9,2*t_16,2*t_15,-2*t_14,-2*t_13},{-2*t_4,-2*t_3,2*t_2,2*t_1,2*t_8,2*t_7,-2*t_6,-2*t_5,-2*t_12,-2*t_11,2*t_10,2*t_9,2*t_16,2*t_15,-2*t_14,-2*t_13},{2*t_12,2*t_11,-2*t_10,-2*t_9,-2*t_16,-2*t_15,2*t_14,2*t_13,2*t_4,2*t_3,-2*t_2,-2*t_1,-2*t_8,-2*t_7,2*t_6,2*t_5},{-2*t_12,-2*t_11,2*t_10,2*t_9,2*t_16,2*t_15,-2*t_14,-2*t_13,2*t_4,2*t_3,-2*t_2,-2*t_1,-2*t_8,-2*t_7,2*t_6,2*t_5},{2*t_8,-2*t_7,-2*t_6,2*t_5,-2*t_4,2*t_3,2*t_2,-2*t_1,-2*t_16,2*t_15,2*t_14,-2*t_13,2*t_12,-2*t_11,-2*t_10,2*t_9},{-2*t_8,2*t_7,-2*t_6,2*t_5,-2*t_4,2*t_3,-2*t_2,2*t_1,2*t_16,-2*t_15,2*t_14,-2*t_13,2*t_12,-2*t_11,2*t_10,-2*t_9},{-2*t_4,2*t_3,-2*t_2,2*t_1,-2*t_8,2*t_7,-2*t_6,2*t_5,2*t_12,-2*t_11,2*t_10,-2*t_9,2*t_16,-2*t_15,2*t_14,-2*t_13},{2*t_4,-2*t_3,2*t_2,-2*t_1,-2*t_8,2*t_7,-2*t_6,2*t_5,2*t_12,-2*t_11,2*t_10,-2*t_9,-2*t_16,2*t_15,-2*t_14,2*t_13},{2*t_12,-2*t_11,2*t_10,-2*t_9,-2*t_16,2*t_15,-2*t_14,2*t_13,2*t_4,-2*t_3,2*t_2,-2*t_1,-2*t_8,2*t_7,-2*t_6,2*t_5},{2*t_12,-2*t_11,2*t_10,-2*t_9,-2*t_16,2*t_15,-2*t_14,2*t_13,-2*t_4,2*t_3,-2*t_2,2*t_1,2*t_8,-2*t_7,2*t_6,-2*t_5},{-2*t_6,2*t_5,-2*t_8,2*t_7,-2*t_2,2*t_1,-2*t_4,2*t_3,2*t_14,-2*t_13,2*t_16,-2*t_15,2*t_10,-2*t_9,2*t_12,-2*t_11},{2*t_2,-2*t_1,2*t_4,-2*t_3,2*t_6,-2*t_5,2*t_8,-2*t_7,-2*t_10,2*t_9,-2*t_12,2*t_11,-2*t_14,2*t_13,-2*t_16,2*t_15},{2*t_2,-2*t_1,2*t_4,-2*t_3,-2*t_6,2*t_5,-2*t_8,2*t_7,2*t_10,-2*t_9,2*t_12,-2*t_11,-2*t_14,2*t_13,-2*t_16,2*t_15},{-2*t_10,2*t_9,-2*t_12,2*t_11,2*t_14,-2*t_13,2*t_16,-2*t_15,-2*t_2,2*t_1,-2*t_4,2*t_3,2*t_6,-2*t_5,2*t_8,-2*t_7},{2*t_10,-2*t_9,2*t_12,-2*t_11,-2*t_14,2*t_13,-2*t_16,2*t_15,-2*t_2,2*t_1,-2*t_4,2*t_3,2*t_6,-2*t_5,2*t_8,-2*t_7},{2*t_2,-2*t_1,-2*t_4,2*t_3,-2*t_6,2*t_5,2*t_8,-2*t_7,-2*t_10,2*t_9,2*t_12,-2*t_11,2*t_14,-2*t_13,-2*t_16,2*t_15},{-2*t_2,2*t_1,2*t_4,-2*t_3,-2*t_6,2*t_5,2*t_8,-2*t_7,-2*t_10,2*t_9,2*t_12,-2*t_11,-2*t_14,2*t_13,2*t_16,-2*t_15},{-2*t_10,2*t_9,2*t_12,-2*t_11,-2*t_14,2*t_13,2*t_16,-2*t_15,-2*t_2,2*t_1,2*t_4,-2*t_3,-2*t_6,2*t_5,2*t_8,-2*t_7},{-2*t_10,2*t_9,2*t_12,-2*t_11,-2*t_14,2*t_13,2*t_16,-2*t_15,2*t_2,-2*t_1,-2*t_4,2*t_3,2*t_6,-2*t_5,-2*t_8,2*t_7},{-2*t_6,2*t_5,2*t_8,-2*t_7,-2*t_2,2*t_1,2*t_4,-2*t_3,-2*t_14,2*t_13,2*t_16,-2*t_15,-2*t_10,2*t_9,2*t_12,-2*t_11},{2*t_14,-2*t_13,-2*t_16,2*t_15,2*t_10,-2*t_9,-2*t_12,2*t_11,2*t_6,-2*t_5,-2*t_8,2*t_7,2*t_2,-2*t_1,-2*t_4,2*t_3},{-2*t_14,2*t_13,2*t_16,-2*t_15,-2*t_10,2*t_9,2*t_12,-2*t_11,2*t_6,-2*t_5,-2*t_8,2*t_7,2*t_2,-2*t_1,-2*t_4,2*t_3},{2*t_14,-2*t_13,-2*t_16,2*t_15,-2*t_10,2*t_9,2*t_12,-2*t_11,-2*t_6,2*t_5,2*t_8,-2*t_7,2*t_2,-2*t_1,-2*t_4,2*t_3},{2*t_14,-2*t_13,-2*t_16,2*t_15,-2*t_10,2*t_9,2*t_12,-2*t_11,2*t_6,-2*t_5,-2*t_8,2*t_7,-2*t_2,2*t_1,2*t_4,-2*t_3},{2*t_6,-2*t_5,-2*t_8,2*t_7,-2*t_2,2*t_1,2*t_4,-2*t_3,2*t_14,-2*t_13,-2*t_16,2*t_15,-2*t_10,2*t_9,2*t_12,-2*t_11}};

reduceHilbert hilbertSeries coker ext5W                                                            
         -1               2       3       4       5       6       7       8      9      10    11
      16T   + 35 - T + 55T  - 165T  + 330T  - 462T  + 462T  - 330T  + 165T  - 55T  + 11T   - T
o22 = ------------------------------------------------------------------------------------------
                                                      11
                                               (1 - T)

o22 : Expression of class Divide
